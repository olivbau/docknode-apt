version: "3.8"

networks:
  docknode-apt:
    driver: bridge

volumes:
  fullnode_data: {}
  caddy_data: {}
  caddy_config: {}
  postgres_data: {}

services:
  fullnode:
    image: "aptoslabs/validator:mainnet"
    restart: unless-stopped
    ports:
      - 6180:6180/tcp
      - 6182:6182/tcp
      - 6186:6186/tcp
    expose:
      - 8080
      - 9101
    volumes:
      - ./aptos:/opt/aptos/etc
      - fullnode_data:/opt/aptos/data
    command: aptos-node -f /opt/aptos/etc/fullnode.yaml
    networks:
      - docknode-apt

  nodeexporter:
    image: prom/node-exporter:v1.5.0
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.rootfs=/rootfs"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"
    expose:
      - 9100
    networks:
      - docknode-apt

  caddy:
    image: caddy:2-alpine
    ports:
      - "80:80"
      - "443:443"
      - "9100:9100"
      - "9102:9102"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    environment:
      - METRICS_USERS=${METRICS_USERS:?err}
      - RPC_USERS=${RPC_USERS:?err}
      - HOST=${HOST:?err}
    networks:
      - docknode-apt

  postgres:
    image: postgres:15.6
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - docknode-apt

  indexerprocessor:
    image: aptoslabs/indexer-processor-rust
    volumes:
      - ./indexer/config.yaml:/config.yaml
    expose:
      - 8084
      - 8080
    command:
      - "-c /config.yaml"
    networks:
      - docknode-apt
